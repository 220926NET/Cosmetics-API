name: CosmeticsAPI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir .\.sonar\scanner 
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install dotnet coverage
        run : | 
          cd ECommerce.API
          dotnet tool install --global dotnet-coverage
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
      
        run: |
           dotnet build ECommerce.API --no-incremental
           
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: https://ecommerceapirev3.azurecr.io/
          username: ${{ secrets.AzureAppService_ContainerUsername_93db6ae496404d499a6dc8a936e1ecbc }}
          password: ${{ secrets.AzureAppService_ContainerPassword_94eef07a8a5d459097002bd2dc0c42b0 }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ecommerceapirev3.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_93db6ae496404d499a6dc8a936e1ecbc }}/envset:${{ github.sha }}
          file: ./dockerfile

  deploy:
      runs-on: ubuntu-latest
      needs: build
      environment:
        name: 'production'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      steps:
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: 'ecommerceapirev3'
            slot-name: 'production'
            publish-profile: ${{ secrets.AzureAppService_PublishProfile_66cd2ec2a2884281a659c1c74cb6eb9b }}
            images: 'ecommerceapirev3.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_93db6ae496404d499a6dc8a936e1ecbc }}/envset:${{ github.sha }}'
